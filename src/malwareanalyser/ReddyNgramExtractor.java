/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package malwareanalyser;

import malwareanalyser.trie.Node;
import malwareanalyser.trie.TrieST;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;

import edu.princeton.cs.introcs.StdIn;
import edu.princeton.cs.introcs.StdOut;

/**
 *
 * @author msgeden
 */
public class ReddyNgramExtractor {

    /**
     * Unit tests the <tt>TrieST</tt> data type.
     */
    public static void main(String[] args) {
  
//        args = new String[]{"/Users/msgeden/Desktop/Data/words3.txt"};
//        // build symbol table from standard input
//        edu.princeton.cs.algs4.TrieST<Integer> st = new edu.princeton.cs.algs4.TrieST<Integer>();
//        for (int i = 0; i<35; i++) {
//            String key = StdIn.readString();
//            st.put(key, i);
//        }
//
//        // print results
//        if (st.size() < 100) {
//            StdOut.println("keys(\"\"):");
//            for (String key : st.keys()) {
//                StdOut.println(key + " " + st.get(key));
//            }
//            StdOut.println();
//        }
//
//        StdOut.println("longestPrefixOf(\"shellsort\"):");
//        StdOut.println(st.longestPrefixOf("shellsort"));
//        StdOut.println();
//
//        StdOut.println("keysWithPrefix(\"shor\"):");
//        for (String s : st.keysWithPrefix("shor"))
//            StdOut.println(s);
//        StdOut.println();
//
//        StdOut.println("keysThatMatch(\".he.l.\"):");
//        for (String s : st.keysThatMatch(".he.l."))
//            StdOut.println(s);
    }
}
