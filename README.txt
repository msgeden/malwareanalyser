This README file is for Android Malware Analyser as a part of Research Project at UCL
Submission date: 26/05/2015
Created by: Munir Geden

*************************************
Path definitions
*************************************
1. a “training data path” folder needs to be specified in config.properties where the APK files and other generated reverse engineering files should be placed
2. a “validation data path” folder needs to be specified in config.properties where the APK files and other generated reverse engineering  files should be placed
3. a "reports" folder needs to be specified in config.properties where the distinctive grams and other output results of the classifications should be placed.

*****************************************************************************
How to configure the application?
*****************************************************************************
1. specify the “training” data path consist of APK files by editing config.properties file or from the command line write: 
	-tp TRAINING_DATA_FOLDER_PATH
2. specify the “validation” data path consist of APK files by editing config.properties file or from the command line write: 
	-vp VALIDATION_DATA_FOLDER_PATH
3. specify the "reports" directory path for the application by editing config.properties file or from the command line write: 
	-rp REPORT_FOLDER_PATH
4. specify the file extension type as a reverse engineering output that would be analysed by editing config.properties file or from the command line write: 
	-fe FILE_EXTENSION_TYPE
You can play with the parameters from the configuration file(config.properties) based on your preference. 


******************************************************************************
ATTENTION FOR JVM MEMORY SIZE!!!
******************************************************************************
Due to high memory consumption during analysis do not forget to increase maximum memory size for JVM
	(ex:$java -Xms1G -Xmx6G -jar MalwareAnalyser.jar ….)

******************************************************************************
How to transform APK files to the specified reverse engineering output?
******************************************************************************
1. to collect tweets and print out them to a file from the command line enter: 
	-ua
	(ex:$java -Xms1G -Xmx6G -jar MalwareAnalyser.jar -ua )

******************************************************************************
How to construct distinctive ngrams from training dataset?
******************************************************************************
1. to collect tweets and print out them to a file from the command line enter: 
	-xn
	(ex:$java -Xms1G -Xmx6G -jar MalwareAnalyser.jar -xn )


******************************************************************************
How to generate weka files of training and validation according to the distinctive grams?
******************************************************************************
1. to collect tweets and print out them to a file from the command line enter: 
	-gw -nf DISTINCTIVE_NGRAMS_FILE_PATH
	(ex:$java -Xms1G -Xmx6G -jar MalwareAnalyser.jar -gw -nf class_topranked_ngrams_ig_4.tsv )


******************************************************************************
How to classify wih Weka classifiers?
******************************************************************************
1. to classify Weka for the given algorithm with the given weka training and validation *.arff files
   (mnb:multinomial naive bayes, 
    nb:naive bayes,
    knn:k-nearest neighbours(k value configurable from configuration.properties), 
    j48:decision trees, 
    svm:support vector machines) from the command line enter: 
	-cw ALGORITHM -wt TRANING_ARFF_FILE_PATH -wv VALIDATION_ARFF_FILE_PATH
	(ex:$java -Xms1G -Xmx6G -jar MalwareAnalyser.jar -cw j48 -wt reports/train_class_ngram_4_1000.arff.arff -wv reports/test_class_ngram_4_1000.arff)
	this will generate output results in the reports folder

***************************************
Access to source code
***************************************
Link to project's repository:
https://bitbucket.org/msgeden/malwareanalyser

For clonning the repository:
git clone https://bitbucket.org/msgeden/malwareanalyser.git